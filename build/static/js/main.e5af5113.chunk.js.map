{"version":3,"sources":["components/Header/Header.js","components/PublicRoute/PublicRoute.js","components/PrivateRoute/PrivateRoute.js","routes.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js","redux/contacts/contactsAction.js","redux/user/actions.js","redux/user/reducers.js","redux/user/selectors.js","redux/user/operations.js","components/Header/Header.module.css","redux/filter/filterAction.js"],"names":["Styles","styled","div","mapDispatchToProps","onLogout","operations","connect","state","isAuth","selectors","getAuth","email","getUserEmail","Navbar","collapseOnSelect","expand","bg","variant","Container","className","styles","container","Brand","Toggle","aria-controls","Collapse","id","Nav","link","to","exact","src","alt","width","avatar","Button","restricted","Component","component","routeProps","render","props","LoginPage","lazy","RegisterPage","ContactsPage","routes","uuid","path","private","App","this","getCurrentUser","fallback","map","route","contactReducer","createReducer","addContactSuccess","payload","deleteContactSuccess","filter","getContactsSuccess","loading","addContactRequest","addContactError","deleteContactRequest","deleteContactError","getContactsRequest","getContactsError","filterReducer","filterContacts","_","config","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","userReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","document","getElementById","createAction","userSignUpRequest","userSignUpSuccess","userSingUpError","userLoginRequest","userLoginSuccess","userLoginError","userLogoutRequest","userLogoutSuccess","userLogoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","actions","initState","name","password","action","user","tokenReducer","token","errorReducer","combineReducers","error","getUserError","console","log","axios","defaults","baseURL","userToken","headers","common","Authorization","signup","credentials","dispatch","post","then","response","data","catch","message","login","logout","getState","get","module","exports"],"mappings":"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","file":"static/js/main.e5af5113.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, Button, Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport styles from \"./Header.module.css\";\nimport { selectors, operations } from \"../../redux/user\";\n\nconst Styles = styled.div`\n  a,\n  .navbar-brand,\n  .navbar-nav,\n  .nav-link {\n    color: red;\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nconst Header = () => {\n  return (\n    <>\n      <Styles>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Container className={styles.container}>\n            <Navbar.Brand>Phonebook</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <NavLink className={styles.link} to=\"/login\">\n                  Log in\n                </NavLink>\n                <NavLink className={styles.link} to=\"/signup\">\n                  Sign up\n                </NavLink>\n                <NavLink exact to=\"/contacts\">\n                  Contacts\n                </NavLink>\n              </Nav>\n              {true && (\n                <>\n                  <div className={styles.container}>\n                    <img\n                      src=\"\"\n                      alt=\"avatar\"\n                      width=\"32\"\n                      className={styles.avatar}\n                    />\n                  </div>\n                  <Button variant=\"primary\" className=\"mr-2\">\n                    Log out\n                  </Button>\n                </>\n              )}\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </Styles>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuth: selectors.getAuth(state),\n  email: selectors.getUserEmail(state),\n});\nconst mapDispatchToProps = { onLogout: operations.onLogout };\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"../../redux/user\";\n\nconst PublicRoute = ({\n  isAuth,\n  restricted,\n  component: Component,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        isAuth && restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\nconst mapStateToProps = (state) => ({ isAuth: selectors.getAuth(state) });\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"../../redux/user\";\n\nconst PrivateRoute = ({\n  isAuth,\n  component: Component,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        !isAuth ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\nconst mapStateToProps = (state) => ({ isAuth: selectors.getAuth(state) });\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { lazy } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst LoginPage = lazy(() => {\n  return import(\"./pages/loginPage/LoginPage\");\n});\n\nconst RegisterPage = lazy(() => import(\"./pages/registerPage/RegisterPage\"));\n\nconst ContactsPage = lazy(() => import(\"./pages/contactsPage/ContactsPage\"));\n\nconst routes = [\n  {\n    id: uuid(),\n    component: LoginPage,\n    path: \"/login\",\n    exact: true,\n    private: false,\n    restricted: false,\n  },\n  {\n    id: uuid(),\n    component: RegisterPage,\n    path: \"/signup\",\n    exact: true,\n    private: false,\n    restricted: true,\n  },\n  {\n    id: uuid(),\n    component: ContactsPage,\n    path: \"/contacts\",\n    exact: true,\n    private: true,\n    restricted: false,\n  },\n];\n\nexport default routes;\n","import React, { Component, Suspense } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport { Switch } from \"react-router\";\nimport PublicRoute from \"./components/PublicRoute/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport { connect } from \"react-redux\";\nimport { operations } from \"./redux/user\";\nimport routes from \"./routes\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Suspense fallback=\"Мы тоже хотим, чтобы все было легко и просто!!! Но......\">\n          <Switch>\n            {routes.map((route) => {\n              return route.private ? (\n                <PrivateRoute key={route.id} {...route} />\n              ) : (\n                <PublicRoute\n                  key={route.id}\n                  restricted={route.restricted}\n                  {...route}\n                />\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getCurrentUser: operations.getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n} from \"./contactsAction\";\n\nconst addContact = (state, { payload }) => {\n  return [...state, payload];\n};\nconst deleteContact = (state, { payload }) => {\n  return state.filter(({ id }) => id !== payload);\n};\n\nconst contactReducer = createReducer([], {\n  [addContactSuccess]: addContact,\n  [deleteContactSuccess]: deleteContact,\n  [getContactsSuccess]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n});\nexport { contactReducer, loading };\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport filterContacts from \"./filterAction\";\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload,\n});\nexport default filterReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { contactReducer, loading } from \"./contacts/contactsReducer\";\nimport filter from \"./filter/filterReducer\";\nimport { userReducer } from \"./user\";\n\nconst config = { key: \"auth\", storage, whitelist: [\"token\"] };\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(config, userReducer),\n    contacts: contactReducer,\n    filter,\n    loading,\n  },\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  ],\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={null}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"ADD_CONTACT_REQUEST\");\nconst addContactSuccess = createAction(\"ADD_CONTACT_SUCCESS\");\nconst addContactError = createAction(\"ADD_CONTACT_ERROR\");\n\nconst deleteContactRequest = createAction(\"DELETE_CONTACT_REQUEST\");\nconst deleteContactSuccess = createAction(\"DELETE_CONTACT_SUCCESS\");\nconst deleteContactError = createAction(\"DELETE_CONTACT_ERROR\");\n\nconst getContactsRequest = createAction(\"GET_CONTACTS_REQUEST\");\nconst getContactsSuccess = createAction(\"GET_CONTACTS_SUCCESS\");\nconst getContactsError = createAction(\"GET_CONTACTS_ERROR\");\n\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst userSignUpRequest = createAction(\"SIGNUP_REQUEST\");\nconst userSignUpSuccess = createAction(\"SIGNUP_SUCCESS\");\nconst userSingUpError = createAction(\"SIGNUP_ERROR\");\n\nconst userLoginRequest = createAction(\"LOGIN_REQUEST\");\nconst userLoginSuccess = createAction(\"LOGIN_SUCCESS\");\nconst userLoginError = createAction(\"LOGIN_ERROR\");\n\nconst userLogoutRequest = createAction(\"LOGOUT_REQUEST\");\nconst userLogoutSuccess = createAction(\"LOGOUT_SUCCESS\");\nconst userLogoutError = createAction(\"LOGOUT_ERROR\");\n\nconst getCurrentUserRequest = createAction(\"CURRENT_USER_REQUEST\");\nconst getCurrentUserSuccess = createAction(\"CURRENT_USER_SUCCESS\");\nconst getCurrentUserError = createAction(\"CURRENT_USER_ERROR\");\n\nexport default {\n  userSignUpRequest,\n  userSignUpSuccess,\n  userSingUpError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\nconst {\n  userSignUpRequest,\n  userSignUpSuccess,\n  userSingUpError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = actions;\nconst initState = { id: \"\", name: \"\", email: \"\", password: \"\" };\n\nconst userReducer = createReducer(initState, {\n  [userSignUpSuccess]: (_, action) => {\n    return action.payload.user;\n  },\n  [userLoginSuccess]: (_, action) => {\n    return action.payload.user;\n  },\n  [userLogoutSuccess]: () => {\n    return initState;\n  },\n  [getCurrentUserSuccess]: (_, action) => {\n    return action.payload;\n  },\n});\n\nconst tokenReducer = createReducer(null, {\n  [userSignUpSuccess]: (_, action) => {\n    return action.payload.token;\n  },\n  [userLoginSuccess]: (_, action) => {\n    return action.payload.token;\n  },\n  [userLogoutSuccess]: (_, action) => null,\n});\n\nconst errorReducer = createReducer(null, {\n  [userSingUpError]: (_, action) => {\n    return action.payload;\n  },\n  [userLoginError]: (_, action) => {\n    return action.payload;\n  },\n  [userLogoutError]: (_, action) => {\n    return action.payload;\n  },\n  [userLogoutSuccess]: () => null,\n  [getCurrentUserError]: (_, action) => {\n    return action.payload;\n  },\n});\n\nexport default combineReducers({\n  user: userReducer,\n  token: tokenReducer,\n  error: errorReducer,\n});\n","const getAuth = ({ auth }) => auth.token;\nconst getUserEmail = ({ auth }) => auth.user.email;\nconst getUserError = ({ auth }) => auth.error;\n\nexport default { getAuth, getUserEmail, getUserError };\n","import axios from \"axios\";\nimport actions from \"./actions\";\nconsole.log(actions);\nconst {\n  userSignUpRequest,\n  userSignUpSuccess,\n  userSingUpError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = actions;\nconsole.log(userSignUpRequest);\naxios.defaults.baseURL = `\nhttps://goit-phonebook-api.herokuapp.com\n`;\n\nconst userToken = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst signup = (credentials) => (dispatch) => {\n  console.log(dispatch);\n  dispatch(userSignUpRequest());\n  axios\n    .post(\"/users/signup\", credentials)\n    .then((response) => {\n      userToken.set(response.data.token);\n      console.log(response.data.token);\n      dispatch(userSignUpSuccess(response.data));\n    })\n    .catch((error) => dispatch(userSingUpError(error.message)));\n};\n\nconst login = (credentials) => (dispatch) => {\n  dispatch(userLoginRequest());\n  axios\n    .post(\"/users/login\", credentials)\n    .then((response) => {\n      userToken.set(response.data.token);\n      dispatch(userLoginSuccess(response.data));\n    })\n    .catch((error) => dispatch(userLoginError(error.message)));\n};\n\nconst logout = () => (dispatch) => {\n  dispatch(userLogoutRequest());\n  axios\n    .post(\"/users/logout\")\n    .then(() => {\n      userToken.unset();\n      dispatch(userLogoutSuccess());\n    })\n    .catch((error) => dispatch(userLogoutError(error)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { userToken: persistedToken },\n  } = getState();\n  if (!persistedToken) return;\n  dispatch(getCurrentUserRequest());\n  axios\n    .get(\"/users/current\")\n    .then((response) => dispatch(getCurrentUserSuccess(response.data)))\n    .catch((error) => dispatch(getCurrentUserError(error)));\n};\n\nexport default { signup, login, logout, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1VC87\",\"avatar\":\"Header_avatar__2DnQ9\",\"name\":\"Header_name__2-9cn\",\"link\":\"Header_link__2wI74\"};","import { createAction } from \"@reduxjs/toolkit\";\nconst filterContacts = createAction(\"FILTER_CONTACTS\");\n\nexport default filterContacts;\n"],"sourceRoot":""}