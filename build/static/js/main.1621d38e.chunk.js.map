{"version":3,"sources":["redux/user/actions.js","redux/user/reducers.js","redux/user/selectors.js","redux/user/operations.js","components/UserMenu/UserMenu.js","components/Header/Header.js","components/PublicRoute/PublicRoute.js","components/PrivateRoute/PrivateRoute.js","routes.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js","redux/contacts/contactsAction.js","components/Header/Header.module.css","components/UserMenu/UserMenu.module.css","redux/filter/filterAction.js"],"names":["userSignUpRequest","createAction","userSignUpSuccess","userSingUpError","userLoginRequest","userLoginSuccess","userLoginError","userLogoutRequest","userLogoutSuccess","userLogoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","actions","initState","name","email","userReducer","createReducer","_","action","payload","user","tokenReducer","token","errorReducer","combineReducers","error","getAuth","auth","getUserEmail","getUserName","state","getUserError","console","log","axios","defaults","baseURL","userToken","headers","common","Authorization","signup","credentials","dispatch","post","then","response","data","catch","message","login","logout","getCurrentUser","getState","get","mapDispatchToProps","onLogout","operations","connect","selectors","userName","Container","className","styles","container","text","Button","onClick","variant","Styles","styled","div","isAuth","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","link","to","exact","restricted","Component","component","routeProps","render","props","LoginPage","lazy","RegisterPage","ContactsPage","routes","uuid","path","private","App","this","fallback","map","route","contactReducer","addContactSuccess","deleteContactSuccess","filter","getContactsSuccess","loading","addContactRequest","addContactError","deleteContactRequest","deleteContactError","getContactsRequest","getContactsError","filterReducer","filterContacts","config","key","storage","store","configureStore","reducer","persistReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1621d38e.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst userSignUpRequest = createAction(\"SIGNUP_REQUEST\");\nconst userSignUpSuccess = createAction(\"SIGNUP_SUCCESS\");\nconst userSingUpError = createAction(\"SIGNUP_ERROR\");\n\nconst userLoginRequest = createAction(\"LOGIN_REQUEST\");\nconst userLoginSuccess = createAction(\"LOGIN_SUCCESS\");\nconst userLoginError = createAction(\"LOGIN_ERROR\");\n\nconst userLogoutRequest = createAction(\"LOGOUT_REQUEST\");\nconst userLogoutSuccess = createAction(\"LOGOUT_SUCCESS\");\nconst userLogoutError = createAction(\"LOGOUT_ERROR\");\n\nconst getCurrentUserRequest = createAction(\"CURRENT_USER_REQUEST\");\nconst getCurrentUserSuccess = createAction(\"CURRENT_USER_SUCCESS\");\nconst getCurrentUserError = createAction(\"CURRENT_USER_ERROR\");\n\nexport default {\n  userSignUpRequest,\n  userSignUpSuccess,\n  userSingUpError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\nconst {\n  userSignUpRequest,\n  userSignUpSuccess,\n  userSingUpError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = actions;\nconst initState = { name: null, email: null };\n\nconst userReducer = createReducer(initState, {\n  [userSignUpSuccess]: (_, action) => {\n    return action.payload.user;\n  },\n  [userLoginSuccess]: (_, action) => {\n    return action.payload.user;\n  },\n  [userLogoutSuccess]: () => {\n    return initState;\n  },\n  [getCurrentUserSuccess]: (_, action) => {\n    return action.payload;\n  },\n});\n\nconst tokenReducer = createReducer(null, {\n  [userSignUpSuccess]: (_, action) => {\n    return action.payload.token;\n  },\n  [userLoginSuccess]: (_, action) => {\n    return action.payload.token;\n  },\n  [userLogoutSuccess]: () => null,\n});\n\nconst errorReducer = createReducer(null, {\n  [userSingUpError]: (_, action) => {\n    return action.payload;\n  },\n  [userLoginError]: (_, action) => {\n    return action.payload;\n  },\n  [userLogoutError]: (_, action) => {\n    return action.payload;\n  },\n  [userLogoutSuccess]: () => null,\n  [getCurrentUserError]: (_, action) => {\n    return action.payload;\n  },\n});\n\nexport default combineReducers({\n  user: userReducer,\n  token: tokenReducer,\n  error: errorReducer,\n});\n","const getAuth = ({ auth }) => auth.token;\nconst getUserEmail = ({ auth }) => auth.user.email;\nconst getUserName = (state) => state.auth.user.name;\nconst getUserError = ({ auth }) => auth.error;\n\nexport default { getAuth, getUserEmail, getUserName, getUserError };\n","import axios from \"axios\";\nimport actions from \"./actions\";\nconsole.log(actions);\nconst {\n  userSignUpRequest,\n  userSignUpSuccess,\n  userSingUpError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = actions;\nconsole.log(userSignUpRequest);\naxios.defaults.baseURL = `\nhttps://goit-phonebook-api.herokuapp.com\n`;\n\nconst userToken = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst signup = (credentials) => (dispatch) => {\n  console.log(dispatch);\n  dispatch(userSignUpRequest());\n  axios\n    .post(\"/users/signup\", credentials)\n    .then((response) => {\n      userToken.set(response.data.token);\n      console.log(response.data.token);\n      dispatch(userSignUpSuccess(response.data));\n    })\n    .catch((error) => dispatch(userSingUpError(error.message)));\n};\n\nconst login = (credentials) => (dispatch) => {\n  dispatch(userLoginRequest());\n  axios\n    .post(\"/users/login\", credentials)\n    .then((response) => {\n      userToken.set(response.data.token);\n      dispatch(userLoginSuccess(response.data));\n    })\n    .catch((error) => dispatch(userLoginError(error.message)));\n};\n\nconst logout = () => (dispatch) => {\n  dispatch(userLogoutRequest());\n  axios\n    .post(\"/users/logout\")\n    .then(() => {\n      userToken.unset();\n      dispatch(userLogoutSuccess());\n    })\n    .catch((error) => dispatch(userLogoutError(error)));\n};\n\nconst getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { userToken: persistedToken },\n  } = getState();\n  if (!persistedToken) return;\n  dispatch(getCurrentUserRequest());\n  axios\n    .get(\"/users/current\")\n    .then((response) => dispatch(getCurrentUserSuccess(response.data)))\n    .catch((error) => dispatch(getCurrentUserError(error)));\n};\n\nexport default { signup, login, logout, getCurrentUser };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Container } from \"react-bootstrap\";\nimport styles from \"./UserMenu.module.css\";\nimport { selectors, operations } from \"../../redux/user\";\n\nconst UserMenu = ({ email, onLogout, userName }) => {\n  return (\n    <Container className=\"d-flex justify-content-end\">\n      <div className={styles.container}>\n        <p className={styles.text}>\n          Welcome, <span>{userName}</span>\n        </p>\n      </div>\n      <Button onClick={onLogout} variant=\"primary\" className=\"mr-2\">\n        Log out\n      </Button>\n    </Container>\n  );\n};\nconst mapStateToProps = (state) => ({\n  email: selectors.getUserEmail(state),\n  userName: selectors.getUserName(state),\n});\nconst mapDispatchToProps = {\n  onLogout: operations.logout,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport styles from \"./Header.module.css\";\nimport { selectors } from \"../../redux/user\";\nimport UserMenu from \"../UserMenu/UserMenu\";\n\nconst Styles = styled.div`\n  a,\n  .navbar-brand,\n  .navbar-nav,\n  .nav-link {\n    color: red;\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nconst Header = ({ isAuth, email }) => {\n  return (\n    <>\n      <Styles>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Container className={styles.container}>\n            <Navbar.Brand>Phonebook</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                {!isAuth && (\n                  <>\n                    <NavLink className={styles.link} to=\"/login\">\n                      Log in\n                    </NavLink>\n                    <NavLink className={styles.link} to=\"/signup\">\n                      Sign up\n                    </NavLink>\n                  </>\n                )}\n              </Nav>\n              {isAuth && (\n                <>\n                  <NavLink exact to=\"/contacts\">\n                    Contacts\n                  </NavLink>\n                </>\n              )}\n              {isAuth && email && <UserMenu />}\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </Styles>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuth: selectors.getAuth(state),\n  email: selectors.getUserEmail(state),\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"../../redux/user\";\n\nconst PublicRoute = ({\n  isAuth,\n  restricted,\n  component: Component,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        isAuth && restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\nconst mapStateToProps = (state) => ({ isAuth: selectors.getAuth(state) });\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"../../redux/user\";\n\nconst PrivateRoute = ({\n  isAuth,\n  component: Component,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        !isAuth ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\nconst mapStateToProps = (state) => ({ isAuth: selectors.getAuth(state) });\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { lazy } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst LoginPage = lazy(() => {\n  return import(\"./pages/loginPage/LoginPage\");\n});\n\nconst RegisterPage = lazy(() => import(\"./pages/registerPage/RegisterPage\"));\n\nconst ContactsPage = lazy(() => import(\"./pages/contactsPage/ContactsPage\"));\n\nconst routes = [\n  {\n    id: uuid(),\n    component: LoginPage,\n    path: \"/login\",\n    exact: true,\n    private: false,\n    restricted: false,\n  },\n  {\n    id: uuid(),\n    component: RegisterPage,\n    path: \"/signup\",\n    exact: true,\n    private: false,\n    restricted: true,\n  },\n  {\n    id: uuid(),\n    component: ContactsPage,\n    path: \"/contacts\",\n    exact: true,\n    private: true,\n    restricted: false,\n  },\n];\n\nexport default routes;\n","import React, { Component, Suspense } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport { Switch } from \"react-router\";\nimport PublicRoute from \"./components/PublicRoute/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport { connect } from \"react-redux\";\nimport { operations } from \"./redux/user\";\nimport routes from \"./routes\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Suspense fallback=\"Мы тоже хотим, чтобы все было легко и просто!!! Но......\">\n          <Switch>\n            {routes.map((route) => {\n              return route.private ? (\n                <PrivateRoute key={route.id} {...route} />\n              ) : (\n                <PublicRoute\n                  key={route.id}\n                  restricted={route.restricted}\n                  {...route}\n                />\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getCurrentUser: operations.getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n} from \"./contactsAction\";\n\nconst addContact = (state, { payload }) => {\n  return [...state, payload];\n};\nconst deleteContact = (state, { payload }) => {\n  return state.filter(({ id }) => id !== payload);\n};\n\nconst contactReducer = createReducer([], {\n  [addContactSuccess]: addContact,\n  [deleteContactSuccess]: deleteContact,\n  [getContactsSuccess]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n});\nexport { contactReducer, loading };\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport filterContacts from \"./filterAction\";\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload,\n});\nexport default filterReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { contactReducer, loading } from \"./contacts/contactsReducer\";\nimport filterReducer from \"./filter/filterReducer\";\nimport { userReducer } from \"./user\";\n\nconst config = { key: \"auth\", storage  };\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(config, userReducer),\n    contacts: contactReducer,\n    filter: filterReducer,\n    loading,\n  },\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  ],\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={null}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"ADD_CONTACT_REQUEST\");\nconst addContactSuccess = createAction(\"ADD_CONTACT_SUCCESS\");\nconst addContactError = createAction(\"ADD_CONTACT_ERROR\");\n\nconst deleteContactRequest = createAction(\"DELETE_CONTACT_REQUEST\");\nconst deleteContactSuccess = createAction(\"DELETE_CONTACT_SUCCESS\");\nconst deleteContactError = createAction(\"DELETE_CONTACT_ERROR\");\n\nconst getContactsRequest = createAction(\"GET_CONTACTS_REQUEST\");\nconst getContactsSuccess = createAction(\"GET_CONTACTS_SUCCESS\");\nconst getContactsError = createAction(\"GET_CONTACTS_ERROR\");\n\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Header_name__2-9cn\",\"link\":\"Header_link__2wI74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"avatar\":\"UserMenu_avatar__2e7Jj\"};","import { createAction } from \"@reduxjs/toolkit\";\nconst filterContacts = createAction(\"FILTER_CONTACTS\");\n\nexport default filterContacts;\n"],"sourceRoot":""}