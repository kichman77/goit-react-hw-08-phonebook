{"version":3,"sources":["components/Notification/Notification.js","components/Notification/Notification.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/operations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","pages/contactsPage/ContactsPage.js"],"names":["Notification","msg","className","style","wrapper","notif","module","exports","axios","defaults","baseURL","addContact","contact","dispatch","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","getContactsRequest","get","getContactsSuccess","getContactsError","contacts","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","name","toLowerCase","includes","getContactById","_","contactId","find","ContactForm","state","phone","isExist","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","uuidv4","elem","console","log","setTimeout","this","styles","form","onSubmit","onChange","placeholder","type","required","btn","Component","mapDispatchToProps","operations","connect","store","selectors","filterContact","filterContacts","input","handleDelete","showContacts","list","map","el","onClick","ContactsPage"],"mappings":"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","file":"static/js/3.efc95939.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = ({msg}) => {\n  return (\n    <>\n      <div className={style.wrapper}>\n        <p className={style.notif}>{msg}</p>\n      </div>\n    </>\n  );\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Notification_wrapper__Uy_Qy\",\"notif\":\"Notification_notif__1XW0G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n} from \"./contactsAction\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n  axios\n    .post(\"contacts\", contact)\n    .then(({data}) => {\n      data = dispatch(addContactSuccess(data));\n      return data;\n    })\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nconst getContacts = () => (dispatch) => {\n  dispatch(getContactsRequest());\n  axios\n    .get(\"contacts\")\n    .then(({data}) => dispatch(getContactsSuccess(data)))\n    .catch((error) => dispatch(getContactsError(error)));\n};\n\nexport default { addContact, deleteContact, getContacts };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = ({ loading }) => loading;\n\nconst getContacts = ({ contacts }) => contacts;\n\nconst getFilter = ({ filter }) => filter;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter((contact) => contact.name.toLowerCase().includes(filter))\n);\n\nconst getContactById = createSelector(\n  [getContacts, (_, contactId) => contactId],\n  (contacts, contactId) => contacts.find(({ id }) => id === contactId)\n);\n\nexport default {\n  getLoading,\n  getContacts,\n  getFilter,\n  getFilteredContacts,\n  getContactById,\n};\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { selectors, operations } from \"../../redux/contacts\";\nimport Notification from \"../Notification/Notification\";\n\nclass ContactForm extends Component {\n  static propTypes = { addContact: PropTypes.func.isRequired };\n  state = {\n    name: \"\",\n    phone: \"\",\n    isExist: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, phone } = this.state;\n    const { contacts, addContact } = this.props;\n    const contact = {\n      id: uuidv4(),\n      name,\n      phone,\n    };\n    const condition = contacts.find((elem) => {\n      console.log(elem.name);\n      return elem.name === contact.name;\n    });\n\n    if (condition) {\n      this.setState({ isExist: true });\n      setTimeout(() => this.setState({ isExist: false }), 2000);\n      return;\n    }\n    addContact(contact);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone, isExist } = this.state;\n    const { handleSubmit, handleChange } = this;\n    return (\n      <>\n        {isExist && <Notification msg=\"contact already exist\" />}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <input\n            onChange={handleChange}\n            placeholder=\"name\"\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            required\n          />\n          <input\n            onChange={handleChange}\n            placeholder=\"phone number\"\n            name=\"phone\"\n            type=\"tel\"\n            value={phone}\n            required\n          />\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return { contacts: selectors.getContacts(store) };\n};\nconst mapDispatchToProps = { addContact: operations.addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"../../redux/contacts\";\nimport filterContacts from \"../../redux/filter/filterAction\";\n\nconst Filter = ({ filterContact, filter }) => {\n  return (\n    <input\n      value={filter}\n      className={styles.input}\n      onChange={(event) => {\n        return filterContact(event.target.value);\n      }}\n      placeholder=\"Find contacts by name\"\n      name=\"filter\"\n      type=\"text\"\n    />\n  );\n};\nconst mapStateToProps = (state) => {\n  return { filter: selectors.getFilter(state) };\n};\nconst mapDispatchToProps = { filterContact: filterContacts };\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filterContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { selectors, operations } from \"../../redux/contacts\";\n\nconst ContactList = ({ showContacts, handleDelete }) => {\n  return (\n    <>\n      {showContacts && (\n        <ul className={styles.list}>\n          {showContacts.map((el) => {\n            return (\n              <li\n                onClick={() => {\n                  handleDelete(el.id);\n                }}\n                key={el.id}\n              >\n                {el.name}\n                <span>{el.phone}</span>\n                <button className={styles.btn} type=\"button\">\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return { showContacts: selectors.getFilteredContacts(store) };\n};\nconst mapDispatchToProps = {\n  handleDelete: operations.deleteContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  showContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport styles from \"./ContactsPage.module.css\";\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n"],"sourceRoot":""}